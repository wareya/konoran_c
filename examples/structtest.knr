
struct Vec {
    f64 x;
}

struct Body {
    Vec pos;
}

Vec vec_sub_vec(Vec a, Vec b)
{
    a.x = a.x - b.x;
    return a;
}

void print_nth(ptr(array(Vec, 2)) bodies, i64 n)
{
    print_float((*bodies)[n].x);
    (*bodies)[n].x = (*bodies)[n].x * (*bodies)[n].x;
    print_float((*bodies)[n].x);
    return;
}

void main()
{
    array(Vec, 2) bodies = [
        Vec { 1.10f64 },
        Vec { 6.66f64 },
    ];
    
    print_float(bodies[1i64].x);
    print_nth(&bodies, 1i64);
    print_nth(&bodies, 1i64);
    print_nth(&bodies, 1i64);
    bodies[1i64] = vec_sub_vec(bodies[1i64], bodies[1i64]);
    print_nth(&bodies, 1i64);
    
    return;
}